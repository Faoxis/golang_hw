//go:generate protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative EventService.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/EventService.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Событие - основная сущность календаря
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // Уникальный идентификатор события
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                   // Заголовок события
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`          // Дата и время начала события
	Duration      *durationpb.Duration   `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`                             // Длительность события
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                       // Описание события (опционально)
	UserId        string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // ID пользователя, владельца события
	NotifyBefore  *durationpb.Duration   `protobuf:"bytes,7,opt,name=notify_before,json=notifyBefore,proto3" json:"notify_before,omitempty"` // За сколько времени высылать уведомление (опционально)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_api_EventService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Event) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Event) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetNotifyBefore() *durationpb.Duration {
	if x != nil {
		return x.NotifyBefore
	}
	return nil
}

// Запрос на создание события
type CreateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                   // Заголовок события
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`          // Дата и время начала события
	Duration      *durationpb.Duration   `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`                             // Длительность события
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                       // Описание события (опционально)
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // ID пользователя
	NotifyBefore  *durationpb.Duration   `protobuf:"bytes,6,opt,name=notify_before,json=notifyBefore,proto3" json:"notify_before,omitempty"` // За сколько времени высылать уведомление (опционально)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_api_EventService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateEventRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateEventRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *CreateEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEventRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateEventRequest) GetNotifyBefore() *durationpb.Duration {
	if x != nil {
		return x.NotifyBefore
	}
	return nil
}

// Ответ на создание события
type CreateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` // Созданное событие
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResponse) Reset() {
	*x = CreateEventResponse{}
	mi := &file_api_EventService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResponse) ProtoMessage() {}

func (x *CreateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResponse.ProtoReflect.Descriptor instead.
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Запрос на обновление события
type UpdateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // ID события для обновления
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                   // Новый заголовок события
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`          // Новая дата и время начала события
	Duration      *durationpb.Duration   `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`                             // Новая длительность события
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                       // Новое описание события (опционально)
	UserId        string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // Новый ID пользователя
	NotifyBefore  *durationpb.Duration   `protobuf:"bytes,7,opt,name=notify_before,json=notifyBefore,proto3" json:"notify_before,omitempty"` // Новое время уведомления (опционально)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventRequest) Reset() {
	*x = UpdateEventRequest{}
	mi := &file_api_EventService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventRequest) ProtoMessage() {}

func (x *UpdateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateEventRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateEventRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *UpdateEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateEventRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateEventRequest) GetNotifyBefore() *durationpb.Duration {
	if x != nil {
		return x.NotifyBefore
	}
	return nil
}

// Ответ на обновление события
type UpdateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` // Обновленное событие
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventResponse) Reset() {
	*x = UpdateEventResponse{}
	mi := &file_api_EventService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventResponse) ProtoMessage() {}

func (x *UpdateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventResponse.ProtoReflect.Descriptor instead.
func (*UpdateEventResponse) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Запрос на удаление события
type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID события для удаления
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_api_EventService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Ответ на удаление события
type DeleteEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Успешность операции
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventResponse) Reset() {
	*x = DeleteEventResponse{}
	mi := &file_api_EventService_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventResponse) ProtoMessage() {}

func (x *DeleteEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventResponse.ProtoReflect.Descriptor instead.
func (*DeleteEventResponse) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос на получение события по ID
type GetEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID события
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventRequest) Reset() {
	*x = GetEventRequest{}
	mi := &file_api_EventService_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventRequest) ProtoMessage() {}

func (x *GetEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventRequest.ProtoReflect.Descriptor instead.
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{7}
}

func (x *GetEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Ответ на получение события по ID
type GetEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` // Событие
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventResponse) Reset() {
	*x = GetEventResponse{}
	mi := &file_api_EventService_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventResponse) ProtoMessage() {}

func (x *GetEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventResponse.ProtoReflect.Descriptor instead.
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{8}
}

func (x *GetEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Запрос на получение списка событий
type ListEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`     // Дата для фильтрации
	Period        string                 `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"` // Период: "day", "week", "month"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	mi := &file_api_EventService_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{9}
}

func (x *ListEventsRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ListEventsRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

// Ответ на получение списка событий
type ListEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"` // Список событий
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	mi := &file_api_EventService_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_EventService_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_EventService_proto_rawDescGZIP(), []int{10}
}

func (x *ListEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_api_EventService_proto protoreflect.FileDescriptor

const file_api_EventService_proto_rawDesc = "" +
	"\n" +
	"\x16api/EventService.proto\x12\bcalendar\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\x9a\x02\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bduration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\x12>\n" +
	"\rnotify_before\x18\a \x01(\v2\x19.google.protobuf.DurationR\fnotifyBefore\"\x97\x02\n" +
	"\x12CreateEventRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bduration\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12>\n" +
	"\rnotify_before\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\fnotifyBefore\"<\n" +
	"\x13CreateEventResponse\x12%\n" +
	"\x05event\x18\x01 \x01(\v2\x0f.calendar.EventR\x05event\"\xa7\x02\n" +
	"\x12UpdateEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bduration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\x12>\n" +
	"\rnotify_before\x18\a \x01(\v2\x19.google.protobuf.DurationR\fnotifyBefore\"<\n" +
	"\x13UpdateEventResponse\x12%\n" +
	"\x05event\x18\x01 \x01(\v2\x0f.calendar.EventR\x05event\"$\n" +
	"\x12DeleteEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"/\n" +
	"\x13DeleteEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"!\n" +
	"\x0fGetEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"9\n" +
	"\x10GetEventResponse\x12%\n" +
	"\x05event\x18\x01 \x01(\v2\x0f.calendar.EventR\x05event\"[\n" +
	"\x11ListEventsRequest\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x16\n" +
	"\x06period\x18\x02 \x01(\tR\x06period\"=\n" +
	"\x12ListEventsResponse\x12'\n" +
	"\x06events\x18\x01 \x03(\v2\x0f.calendar.EventR\x06events2\xfe\x02\n" +
	"\fEventService\x12J\n" +
	"\vCreateEvent\x12\x1c.calendar.CreateEventRequest\x1a\x1d.calendar.CreateEventResponse\x12J\n" +
	"\vUpdateEvent\x12\x1c.calendar.UpdateEventRequest\x1a\x1d.calendar.UpdateEventResponse\x12J\n" +
	"\vDeleteEvent\x12\x1c.calendar.DeleteEventRequest\x1a\x1d.calendar.DeleteEventResponse\x12A\n" +
	"\bGetEvent\x12\x19.calendar.GetEventRequest\x1a\x1a.calendar.GetEventResponse\x12G\n" +
	"\n" +
	"ListEvents\x12\x1b.calendar.ListEventsRequest\x1a\x1c.calendar.ListEventsResponseB8Z6github.com/Faoxis/golang_hw/hw12_13_14_15_calendar/apib\x06proto3"

var (
	file_api_EventService_proto_rawDescOnce sync.Once
	file_api_EventService_proto_rawDescData []byte
)

func file_api_EventService_proto_rawDescGZIP() []byte {
	file_api_EventService_proto_rawDescOnce.Do(func() {
		file_api_EventService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_EventService_proto_rawDesc), len(file_api_EventService_proto_rawDesc)))
	})
	return file_api_EventService_proto_rawDescData
}

var file_api_EventService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_EventService_proto_goTypes = []any{
	(*Event)(nil),                 // 0: calendar.Event
	(*CreateEventRequest)(nil),    // 1: calendar.CreateEventRequest
	(*CreateEventResponse)(nil),   // 2: calendar.CreateEventResponse
	(*UpdateEventRequest)(nil),    // 3: calendar.UpdateEventRequest
	(*UpdateEventResponse)(nil),   // 4: calendar.UpdateEventResponse
	(*DeleteEventRequest)(nil),    // 5: calendar.DeleteEventRequest
	(*DeleteEventResponse)(nil),   // 6: calendar.DeleteEventResponse
	(*GetEventRequest)(nil),       // 7: calendar.GetEventRequest
	(*GetEventResponse)(nil),      // 8: calendar.GetEventResponse
	(*ListEventsRequest)(nil),     // 9: calendar.ListEventsRequest
	(*ListEventsResponse)(nil),    // 10: calendar.ListEventsResponse
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 12: google.protobuf.Duration
}
var file_api_EventService_proto_depIdxs = []int32{
	11, // 0: calendar.Event.start_time:type_name -> google.protobuf.Timestamp
	12, // 1: calendar.Event.duration:type_name -> google.protobuf.Duration
	12, // 2: calendar.Event.notify_before:type_name -> google.protobuf.Duration
	11, // 3: calendar.CreateEventRequest.start_time:type_name -> google.protobuf.Timestamp
	12, // 4: calendar.CreateEventRequest.duration:type_name -> google.protobuf.Duration
	12, // 5: calendar.CreateEventRequest.notify_before:type_name -> google.protobuf.Duration
	0,  // 6: calendar.CreateEventResponse.event:type_name -> calendar.Event
	11, // 7: calendar.UpdateEventRequest.start_time:type_name -> google.protobuf.Timestamp
	12, // 8: calendar.UpdateEventRequest.duration:type_name -> google.protobuf.Duration
	12, // 9: calendar.UpdateEventRequest.notify_before:type_name -> google.protobuf.Duration
	0,  // 10: calendar.UpdateEventResponse.event:type_name -> calendar.Event
	0,  // 11: calendar.GetEventResponse.event:type_name -> calendar.Event
	11, // 12: calendar.ListEventsRequest.date:type_name -> google.protobuf.Timestamp
	0,  // 13: calendar.ListEventsResponse.events:type_name -> calendar.Event
	1,  // 14: calendar.EventService.CreateEvent:input_type -> calendar.CreateEventRequest
	3,  // 15: calendar.EventService.UpdateEvent:input_type -> calendar.UpdateEventRequest
	5,  // 16: calendar.EventService.DeleteEvent:input_type -> calendar.DeleteEventRequest
	7,  // 17: calendar.EventService.GetEvent:input_type -> calendar.GetEventRequest
	9,  // 18: calendar.EventService.ListEvents:input_type -> calendar.ListEventsRequest
	2,  // 19: calendar.EventService.CreateEvent:output_type -> calendar.CreateEventResponse
	4,  // 20: calendar.EventService.UpdateEvent:output_type -> calendar.UpdateEventResponse
	6,  // 21: calendar.EventService.DeleteEvent:output_type -> calendar.DeleteEventResponse
	8,  // 22: calendar.EventService.GetEvent:output_type -> calendar.GetEventResponse
	10, // 23: calendar.EventService.ListEvents:output_type -> calendar.ListEventsResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_EventService_proto_init() }
func file_api_EventService_proto_init() {
	if File_api_EventService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_EventService_proto_rawDesc), len(file_api_EventService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_EventService_proto_goTypes,
		DependencyIndexes: file_api_EventService_proto_depIdxs,
		MessageInfos:      file_api_EventService_proto_msgTypes,
	}.Build()
	File_api_EventService_proto = out.File
	file_api_EventService_proto_goTypes = nil
	file_api_EventService_proto_depIdxs = nil
}
